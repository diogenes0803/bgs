{"ast":null,"code":"var _jsxFileName = \"/Users/diogenes/workspace/bgs_web/src/componenets/blacklist/Blacklist.js\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport BGSTable from '../commons/BGSTable';\nimport { useState } from 'react';\nimport BGSClient from '../../lib/BGSClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headers = ['유저아이디', '유저이름', '비고'];\n\nfunction Blacklist() {\n  _s();\n\n  const [data, setData] = useState(BGSClient.getBlackLists());\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(BGSTable, {\n      headers: headers,\n      items: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blacklist, \"iO0uGe6kWvhRRB+egM9ht2kODbg=\");\n\n_c = Blacklist;\nexport default Blacklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blacklist\");","map":{"version":3,"sources":["/Users/diogenes/workspace/bgs_web/src/componenets/blacklist/Blacklist.js"],"names":["Container","BGSTable","useState","BGSClient","headers","Blacklist","data","setData","getBlackLists"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,IAAlB,CAAhB;;AAEA,SAASC,SAAT,GAAsB;AAAA;;AACpB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAmBL,QAAQ,CAACC,SAAS,CAACK,aAAV,EAAD,CAAjC;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEJ,OAAnB;AAA4B,MAAA,KAAK,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAPQD,S;;KAAAA,S;AAST,eAAeA,SAAf","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport BGSTable from '../commons/BGSTable';\nimport { useState } from 'react';\nimport BGSClient from '../../lib/BGSClient';\n\nconst headers = ['유저아이디', '유저이름', '비고'];\n\nfunction Blacklist () {\n  const [ data, setData] = useState(BGSClient.getBlackLists());\n  return (\n    <Container>\n      <BGSTable headers={headers} items={data}></BGSTable>\n    </Container>\n  )\n}\n\nexport default Blacklist;"]},"metadata":{},"sourceType":"module"}